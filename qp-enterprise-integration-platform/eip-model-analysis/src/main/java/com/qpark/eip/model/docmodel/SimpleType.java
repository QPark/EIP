//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.09.19 at 04:46:23 PM CEST 
//


package com.qpark.eip.model.docmodel;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.OrderColumn;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * This is the SimpleType.
 * 
 * <p>Java class for SimpleType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SimpleType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.qpark-consulting.com/EIP/Utility/DocumentationModel}DataType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="descendedFromId" type="{http://www.qpark-consulting.com/EIP/Utility/DocumentationModel}UUIDType" minOccurs="0"/&gt;
 *         &lt;element name="restrictionEnumeration" type="{http://www.w3.org/2001/XMLSchema}normalizedString" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="restrictionLength" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="restrictionMinLength" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="restrictionMaxLength" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="restrictionMinExclusive" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="restrictionMaxExclusive" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="restrictionMinInclusive" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="restrictionMaxInclusive" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="restrictionTotalDigits" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="restrictionFractionDigits" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="restrictionPattern" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="defaultValue" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SimpleType", propOrder = {
    "descendedFromId",
    "restrictionEnumeration",
    "restrictionLength",
    "restrictionMinLength",
    "restrictionMaxLength",
    "restrictionMinExclusive",
    "restrictionMaxExclusive",
    "restrictionMinInclusive",
    "restrictionMaxInclusive",
    "restrictionTotalDigits",
    "restrictionFractionDigits",
    "restrictionPattern",
    "defaultValue"
})
@Entity(name = "SimpleType")
@Table(name = "SIMPLETYPE")
public class SimpleType
    extends DataType
    implements Serializable, Equals, HashCode
{

    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    @XmlSchemaType(name = "normalizedString")
    protected String descendedFromId;
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected List<String> restrictionEnumeration;
    protected Integer restrictionLength;
    protected Integer restrictionMinLength;
    protected Integer restrictionMaxLength;
    protected BigDecimal restrictionMinExclusive;
    protected BigDecimal restrictionMaxExclusive;
    protected BigDecimal restrictionMinInclusive;
    protected BigDecimal restrictionMaxInclusive;
    protected Integer restrictionTotalDigits;
    protected Integer restrictionFractionDigits;
    protected String restrictionPattern;
    protected String defaultValue;

    /**
     * Gets the value of the descendedFromId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DESCENDEDFROMID", length = 36)
    public String getDescendedFromId() {
        return descendedFromId;
    }

    /**
     * Sets the value of the descendedFromId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescendedFromId(String value) {
        this.descendedFromId = value;
    }

    @Transient
    public boolean isSetDescendedFromId() {
        return (this.descendedFromId!= null);
    }

    /**
     * Gets the value of the restrictionEnumeration property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the restrictionEnumeration property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRestrictionEnumeration().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @OrderColumn(name = "HJINDEX")
    @Column(name = "HJVALUE", length = 255)
    @CollectionTable(name = "SIMPLETYPE_RESTRICTIONENUMER_0", joinColumns = {
        @JoinColumn(name = "HJID")
    })
    public List<String> getRestrictionEnumeration() {
        if (restrictionEnumeration == null) {
            restrictionEnumeration = new ArrayList<String>();
        }
        return this.restrictionEnumeration;
    }

    /**
     * 
     * 
     */
    public void setRestrictionEnumeration(List<String> restrictionEnumeration) {
        this.restrictionEnumeration = restrictionEnumeration;
    }

    @Transient
    public boolean isSetRestrictionEnumeration() {
        return ((this.restrictionEnumeration!= null)&&(!this.restrictionEnumeration.isEmpty()));
    }

    public void unsetRestrictionEnumeration() {
        this.restrictionEnumeration = null;
    }

    /**
     * Gets the value of the restrictionLength property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @Basic
    @Column(name = "RESTRICTIONLENGTH", precision = 10, scale = 0)
    public Integer getRestrictionLength() {
        return restrictionLength;
    }

    /**
     * Sets the value of the restrictionLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setRestrictionLength(Integer value) {
        this.restrictionLength = value;
    }

    @Transient
    public boolean isSetRestrictionLength() {
        return (this.restrictionLength!= null);
    }

    /**
     * Gets the value of the restrictionMinLength property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @Basic
    @Column(name = "RESTRICTIONMINLENGTH", precision = 10, scale = 0)
    public Integer getRestrictionMinLength() {
        return restrictionMinLength;
    }

    /**
     * Sets the value of the restrictionMinLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setRestrictionMinLength(Integer value) {
        this.restrictionMinLength = value;
    }

    @Transient
    public boolean isSetRestrictionMinLength() {
        return (this.restrictionMinLength!= null);
    }

    /**
     * Gets the value of the restrictionMaxLength property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @Basic
    @Column(name = "RESTRICTIONMAXLENGTH", precision = 10, scale = 0)
    public Integer getRestrictionMaxLength() {
        return restrictionMaxLength;
    }

    /**
     * Sets the value of the restrictionMaxLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setRestrictionMaxLength(Integer value) {
        this.restrictionMaxLength = value;
    }

    @Transient
    public boolean isSetRestrictionMaxLength() {
        return (this.restrictionMaxLength!= null);
    }

    /**
     * Gets the value of the restrictionMinExclusive property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "RESTRICTIONMINEXCLUSIVE", precision = 20, scale = 10)
    public BigDecimal getRestrictionMinExclusive() {
        return restrictionMinExclusive;
    }

    /**
     * Sets the value of the restrictionMinExclusive property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setRestrictionMinExclusive(BigDecimal value) {
        this.restrictionMinExclusive = value;
    }

    @Transient
    public boolean isSetRestrictionMinExclusive() {
        return (this.restrictionMinExclusive!= null);
    }

    /**
     * Gets the value of the restrictionMaxExclusive property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "RESTRICTIONMAXEXCLUSIVE", precision = 20, scale = 10)
    public BigDecimal getRestrictionMaxExclusive() {
        return restrictionMaxExclusive;
    }

    /**
     * Sets the value of the restrictionMaxExclusive property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setRestrictionMaxExclusive(BigDecimal value) {
        this.restrictionMaxExclusive = value;
    }

    @Transient
    public boolean isSetRestrictionMaxExclusive() {
        return (this.restrictionMaxExclusive!= null);
    }

    /**
     * Gets the value of the restrictionMinInclusive property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "RESTRICTIONMININCLUSIVE", precision = 20, scale = 10)
    public BigDecimal getRestrictionMinInclusive() {
        return restrictionMinInclusive;
    }

    /**
     * Sets the value of the restrictionMinInclusive property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setRestrictionMinInclusive(BigDecimal value) {
        this.restrictionMinInclusive = value;
    }

    @Transient
    public boolean isSetRestrictionMinInclusive() {
        return (this.restrictionMinInclusive!= null);
    }

    /**
     * Gets the value of the restrictionMaxInclusive property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "RESTRICTIONMAXINCLUSIVE", precision = 20, scale = 10)
    public BigDecimal getRestrictionMaxInclusive() {
        return restrictionMaxInclusive;
    }

    /**
     * Sets the value of the restrictionMaxInclusive property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setRestrictionMaxInclusive(BigDecimal value) {
        this.restrictionMaxInclusive = value;
    }

    @Transient
    public boolean isSetRestrictionMaxInclusive() {
        return (this.restrictionMaxInclusive!= null);
    }

    /**
     * Gets the value of the restrictionTotalDigits property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @Basic
    @Column(name = "RESTRICTIONTOTALDIGITS", precision = 10, scale = 0)
    public Integer getRestrictionTotalDigits() {
        return restrictionTotalDigits;
    }

    /**
     * Sets the value of the restrictionTotalDigits property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setRestrictionTotalDigits(Integer value) {
        this.restrictionTotalDigits = value;
    }

    @Transient
    public boolean isSetRestrictionTotalDigits() {
        return (this.restrictionTotalDigits!= null);
    }

    /**
     * Gets the value of the restrictionFractionDigits property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @Basic
    @Column(name = "RESTRICTIONFRACTIONDIGITS", precision = 10, scale = 0)
    public Integer getRestrictionFractionDigits() {
        return restrictionFractionDigits;
    }

    /**
     * Sets the value of the restrictionFractionDigits property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setRestrictionFractionDigits(Integer value) {
        this.restrictionFractionDigits = value;
    }

    @Transient
    public boolean isSetRestrictionFractionDigits() {
        return (this.restrictionFractionDigits!= null);
    }

    /**
     * Gets the value of the restrictionPattern property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "RESTRICTIONPATTERN", length = 255)
    public String getRestrictionPattern() {
        return restrictionPattern;
    }

    /**
     * Sets the value of the restrictionPattern property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRestrictionPattern(String value) {
        this.restrictionPattern = value;
    }

    @Transient
    public boolean isSetRestrictionPattern() {
        return (this.restrictionPattern!= null);
    }

    /**
     * Gets the value of the defaultValue property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DEFAULTVALUE", length = 255)
    public String getDefaultValue() {
        return defaultValue;
    }

    /**
     * Sets the value of the defaultValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDefaultValue(String value) {
        this.defaultValue = value;
    }

    @Transient
    public boolean isSetDefaultValue() {
        return (this.defaultValue!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final SimpleType that = ((SimpleType) object);
        {
            String lhsDescendedFromId;
            lhsDescendedFromId = this.getDescendedFromId();
            String rhsDescendedFromId;
            rhsDescendedFromId = that.getDescendedFromId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "descendedFromId", lhsDescendedFromId), LocatorUtils.property(thatLocator, "descendedFromId", rhsDescendedFromId), lhsDescendedFromId, rhsDescendedFromId)) {
                return false;
            }
        }
        {
            List<String> lhsRestrictionEnumeration;
            lhsRestrictionEnumeration = (this.isSetRestrictionEnumeration()?this.getRestrictionEnumeration():null);
            List<String> rhsRestrictionEnumeration;
            rhsRestrictionEnumeration = (that.isSetRestrictionEnumeration()?that.getRestrictionEnumeration():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "restrictionEnumeration", lhsRestrictionEnumeration), LocatorUtils.property(thatLocator, "restrictionEnumeration", rhsRestrictionEnumeration), lhsRestrictionEnumeration, rhsRestrictionEnumeration)) {
                return false;
            }
        }
        {
            Integer lhsRestrictionLength;
            lhsRestrictionLength = this.getRestrictionLength();
            Integer rhsRestrictionLength;
            rhsRestrictionLength = that.getRestrictionLength();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "restrictionLength", lhsRestrictionLength), LocatorUtils.property(thatLocator, "restrictionLength", rhsRestrictionLength), lhsRestrictionLength, rhsRestrictionLength)) {
                return false;
            }
        }
        {
            Integer lhsRestrictionMinLength;
            lhsRestrictionMinLength = this.getRestrictionMinLength();
            Integer rhsRestrictionMinLength;
            rhsRestrictionMinLength = that.getRestrictionMinLength();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "restrictionMinLength", lhsRestrictionMinLength), LocatorUtils.property(thatLocator, "restrictionMinLength", rhsRestrictionMinLength), lhsRestrictionMinLength, rhsRestrictionMinLength)) {
                return false;
            }
        }
        {
            Integer lhsRestrictionMaxLength;
            lhsRestrictionMaxLength = this.getRestrictionMaxLength();
            Integer rhsRestrictionMaxLength;
            rhsRestrictionMaxLength = that.getRestrictionMaxLength();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "restrictionMaxLength", lhsRestrictionMaxLength), LocatorUtils.property(thatLocator, "restrictionMaxLength", rhsRestrictionMaxLength), lhsRestrictionMaxLength, rhsRestrictionMaxLength)) {
                return false;
            }
        }
        {
            BigDecimal lhsRestrictionMinExclusive;
            lhsRestrictionMinExclusive = this.getRestrictionMinExclusive();
            BigDecimal rhsRestrictionMinExclusive;
            rhsRestrictionMinExclusive = that.getRestrictionMinExclusive();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "restrictionMinExclusive", lhsRestrictionMinExclusive), LocatorUtils.property(thatLocator, "restrictionMinExclusive", rhsRestrictionMinExclusive), lhsRestrictionMinExclusive, rhsRestrictionMinExclusive)) {
                return false;
            }
        }
        {
            BigDecimal lhsRestrictionMaxExclusive;
            lhsRestrictionMaxExclusive = this.getRestrictionMaxExclusive();
            BigDecimal rhsRestrictionMaxExclusive;
            rhsRestrictionMaxExclusive = that.getRestrictionMaxExclusive();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "restrictionMaxExclusive", lhsRestrictionMaxExclusive), LocatorUtils.property(thatLocator, "restrictionMaxExclusive", rhsRestrictionMaxExclusive), lhsRestrictionMaxExclusive, rhsRestrictionMaxExclusive)) {
                return false;
            }
        }
        {
            BigDecimal lhsRestrictionMinInclusive;
            lhsRestrictionMinInclusive = this.getRestrictionMinInclusive();
            BigDecimal rhsRestrictionMinInclusive;
            rhsRestrictionMinInclusive = that.getRestrictionMinInclusive();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "restrictionMinInclusive", lhsRestrictionMinInclusive), LocatorUtils.property(thatLocator, "restrictionMinInclusive", rhsRestrictionMinInclusive), lhsRestrictionMinInclusive, rhsRestrictionMinInclusive)) {
                return false;
            }
        }
        {
            BigDecimal lhsRestrictionMaxInclusive;
            lhsRestrictionMaxInclusive = this.getRestrictionMaxInclusive();
            BigDecimal rhsRestrictionMaxInclusive;
            rhsRestrictionMaxInclusive = that.getRestrictionMaxInclusive();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "restrictionMaxInclusive", lhsRestrictionMaxInclusive), LocatorUtils.property(thatLocator, "restrictionMaxInclusive", rhsRestrictionMaxInclusive), lhsRestrictionMaxInclusive, rhsRestrictionMaxInclusive)) {
                return false;
            }
        }
        {
            Integer lhsRestrictionTotalDigits;
            lhsRestrictionTotalDigits = this.getRestrictionTotalDigits();
            Integer rhsRestrictionTotalDigits;
            rhsRestrictionTotalDigits = that.getRestrictionTotalDigits();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "restrictionTotalDigits", lhsRestrictionTotalDigits), LocatorUtils.property(thatLocator, "restrictionTotalDigits", rhsRestrictionTotalDigits), lhsRestrictionTotalDigits, rhsRestrictionTotalDigits)) {
                return false;
            }
        }
        {
            Integer lhsRestrictionFractionDigits;
            lhsRestrictionFractionDigits = this.getRestrictionFractionDigits();
            Integer rhsRestrictionFractionDigits;
            rhsRestrictionFractionDigits = that.getRestrictionFractionDigits();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "restrictionFractionDigits", lhsRestrictionFractionDigits), LocatorUtils.property(thatLocator, "restrictionFractionDigits", rhsRestrictionFractionDigits), lhsRestrictionFractionDigits, rhsRestrictionFractionDigits)) {
                return false;
            }
        }
        {
            String lhsRestrictionPattern;
            lhsRestrictionPattern = this.getRestrictionPattern();
            String rhsRestrictionPattern;
            rhsRestrictionPattern = that.getRestrictionPattern();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "restrictionPattern", lhsRestrictionPattern), LocatorUtils.property(thatLocator, "restrictionPattern", rhsRestrictionPattern), lhsRestrictionPattern, rhsRestrictionPattern)) {
                return false;
            }
        }
        {
            String lhsDefaultValue;
            lhsDefaultValue = this.getDefaultValue();
            String rhsDefaultValue;
            rhsDefaultValue = that.getDefaultValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "defaultValue", lhsDefaultValue), LocatorUtils.property(thatLocator, "defaultValue", rhsDefaultValue), lhsDefaultValue, rhsDefaultValue)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theDescendedFromId;
            theDescendedFromId = this.getDescendedFromId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "descendedFromId", theDescendedFromId), currentHashCode, theDescendedFromId);
        }
        {
            List<String> theRestrictionEnumeration;
            theRestrictionEnumeration = (this.isSetRestrictionEnumeration()?this.getRestrictionEnumeration():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "restrictionEnumeration", theRestrictionEnumeration), currentHashCode, theRestrictionEnumeration);
        }
        {
            Integer theRestrictionLength;
            theRestrictionLength = this.getRestrictionLength();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "restrictionLength", theRestrictionLength), currentHashCode, theRestrictionLength);
        }
        {
            Integer theRestrictionMinLength;
            theRestrictionMinLength = this.getRestrictionMinLength();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "restrictionMinLength", theRestrictionMinLength), currentHashCode, theRestrictionMinLength);
        }
        {
            Integer theRestrictionMaxLength;
            theRestrictionMaxLength = this.getRestrictionMaxLength();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "restrictionMaxLength", theRestrictionMaxLength), currentHashCode, theRestrictionMaxLength);
        }
        {
            BigDecimal theRestrictionMinExclusive;
            theRestrictionMinExclusive = this.getRestrictionMinExclusive();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "restrictionMinExclusive", theRestrictionMinExclusive), currentHashCode, theRestrictionMinExclusive);
        }
        {
            BigDecimal theRestrictionMaxExclusive;
            theRestrictionMaxExclusive = this.getRestrictionMaxExclusive();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "restrictionMaxExclusive", theRestrictionMaxExclusive), currentHashCode, theRestrictionMaxExclusive);
        }
        {
            BigDecimal theRestrictionMinInclusive;
            theRestrictionMinInclusive = this.getRestrictionMinInclusive();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "restrictionMinInclusive", theRestrictionMinInclusive), currentHashCode, theRestrictionMinInclusive);
        }
        {
            BigDecimal theRestrictionMaxInclusive;
            theRestrictionMaxInclusive = this.getRestrictionMaxInclusive();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "restrictionMaxInclusive", theRestrictionMaxInclusive), currentHashCode, theRestrictionMaxInclusive);
        }
        {
            Integer theRestrictionTotalDigits;
            theRestrictionTotalDigits = this.getRestrictionTotalDigits();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "restrictionTotalDigits", theRestrictionTotalDigits), currentHashCode, theRestrictionTotalDigits);
        }
        {
            Integer theRestrictionFractionDigits;
            theRestrictionFractionDigits = this.getRestrictionFractionDigits();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "restrictionFractionDigits", theRestrictionFractionDigits), currentHashCode, theRestrictionFractionDigits);
        }
        {
            String theRestrictionPattern;
            theRestrictionPattern = this.getRestrictionPattern();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "restrictionPattern", theRestrictionPattern), currentHashCode, theRestrictionPattern);
        }
        {
            String theDefaultValue;
            theDefaultValue = this.getDefaultValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "defaultValue", theDefaultValue), currentHashCode, theDefaultValue);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
