<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
<!--
 * Copyright (c) 2013, 2014, 2015 QPark Consulting  S.a r.l.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0.
 * The Eclipse Public License is available at
 * http://www.eclipse.org/legal/epl-v10.html.
-->

	<parent>
		<groupId>com.samples.platform</groupId>
		<artifactId>platform-base</artifactId>
		<version>3.3.3</version><!--qpark-eip-version-->
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>platform-webapp-library</artifactId>
	<packaging>war</packaging>
	<name>platform-webapp-library</name>
	<description>Webapp containing the library service.</description>

	<properties>
		<eip.service.ids>library, iss.tech.support</eip.service.ids>
		<service.name>library</service.name>
		<service.application.name>${bus.application.name}</service.application.name>
		<service.final.name>${bus.war.prefix}${service.application.name}-${service.name}</service.final.name>
		<service.war.name>${service.final.name}-${project.version}</service.war.name>
		<model.dir>${project.build.directory}/model</model.dir>
		<java.gen.dir>${project.build.directory}/generated-sources</java.gen.dir>
		<router.definition.dir>${project.build.directory}/classes/router/definition</router.definition.dir>
	</properties>
	<build>
		<finalName>${service.final.name}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warName>${service.war.name}</warName>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${project.version}-b${buildNumber}</Implementation-Build>
						</manifestEntries>
					</archive>
					<packagingIncludes>
					</packagingIncludes>
					<packagingExcludes>
WEB-INF/lib/activation-1.1.1.jar,
WEB-INF/lib/aopalliance-1.0.jar,
WEB-INF/lib/aspectjtools-1.8.7.jar,
WEB-INF/lib/commons-beanutils-1.9.2.jar,
WEB-INF/lib/commons-codec-1.10.jar,
WEB-INF/lib/commons-collections-3.2.1.jar,
WEB-INF/lib/commons-digester-2.1.jar,
WEB-INF/lib/commons-httpclient-3.1.jar,
WEB-INF/lib/commons-io-2.4.jar,
WEB-INF/lib/commons-lang-2.6.jar,
WEB-INF/lib/commons-lang3-3.3.2.jar,
WEB-INF/lib/commons-logging-1.2.jar,
WEB-INF/lib/commons-net-3.3.jar,
WEB-INF/lib/commons-pool-1.6.jar,
WEB-INF/lib/commons-pool2-2.2.jar,
WEB-INF/lib/disruptor-3.2.1.jar,
WEB-INF/lib/dom4j-1.6.1.jar,
WEB-INF/lib/gs-collections-5.1.0.jar,
WEB-INF/lib/gs-collections-api-5.1.0.jar,
WEB-INF/lib/insight-annotation-1.9.2.RELEASE.jar,
WEB-INF/lib/javax.persistence-2.1.0.jar,
WEB-INF/lib/jaxb-api-2.0.jar,
WEB-INF/lib/jaxb-core-2.2.11.jar,
WEB-INF/lib/jaxb-impl-2.2.11.jar,
WEB-INF/lib/jaxws-api-2.1.jar,
WEB-INF/lib/joda-time-2.5.jar,
WEB-INF/lib/jsr166e-1.0.jar,
WEB-INF/lib/jsr173_api-1.0.jar,
WEB-INF/lib/logback-classic-1.1.3.jar,
WEB-INF/lib/logback-core-1.1.3.jar,
WEB-INF/lib/reactor-core-1.1.6.RELEASE.jar,
WEB-INF/lib/saaj-api-1.3.5.jar,
WEB-INF/lib/slf4j-api-1.7.12.jar,
WEB-INF/lib/log4j-over-slf4j-1.7.12.jar,
WEB-INF/lib/jul-to-slf4j-1.7.12.jar,
WEB-INF/lib/jcl-over-slf4j-1.7.12.jar,
WEB-INF/lib/stax-api-1.0.jar,
WEB-INF/lib/wsdl4j-1.6.3.jar,
WEB-INF/lib/wss4j-1.6.18.jar,
WEB-INF/lib/xmlbeans-2.6.0.jar,
WEB-INF/lib/xmlschema-core-2.1.0.jar,
WEB-INF/lib/xmlsec-1.5.8.jar,
WEB-INF/lib/xws-security-3.0.jar
					</packagingExcludes>
					<ignoreWebxml>true</ignoreWebxml>
					<!--<webXml>${project.build.directory}/${service.final.name}/WEB-INF</webXml>-->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-xsds</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${domain.groupId}</groupId>
									<artifactId>model</artifactId>
									<version>${domain.version}</version>
									<outputDirectory>${model.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>${domain.groupId}</groupId>
									<artifactId>service</artifactId>
									<version>${domain.version}</version>
									<outputDirectory>${model.dir}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.qpark.maven</groupId>
				<artifactId>eip-generator-plugin</artifactId>
				<executions>
					<execution>
						<id>generate mock operation providers</id>
						<phase>process-sources</phase>
						<goals>
							<goal>generate-mock-operations</goal>
						</goals>
						<configuration>
							<baseDirectory>${model.dir}</baseDirectory>
							<outputDirectory>${java.gen.dir}</outputDirectory>
							<basePackageName>${base.package.name}</basePackageName>
							<serviceId>${eip.service.ids}</serviceId>
							<failureHandlerClassName>${failure.handler.class.name}</failureHandlerClassName>
						</configuration>
					</execution>
					<execution>
						<id>generate router properties</id>
						<phase>process-classes</phase>
						<goals>
							<goal>generate-router-properties</goal>
						</goals>
						<configuration>
							<baseDirectory>${model.dir}</baseDirectory>
							<outputDirectory>${router.definition.dir}</outputDirectory>
							<basePackageName>${base.package.name}</basePackageName>
							<serviceId>${eip.service.ids}</serviceId>
						</configuration>
					</execution>
					<execution>
						<id>make schemalocations relative</id>
						<phase>process-classes</phase>
						<goals>
							<goal>relative-schemalocation</goal>
						</goals>
						<configuration>
							<baseDirectory>${model.dir}</baseDirectory>
							<outputDirectory>${project.build.directory}/classes</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>make schemalocations webapp absolute</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>webapp-schemalocation</goal>
						</goals>
						<configuration>
							<baseDirectory>${model.dir}</baseDirectory>
							<outputDirectory>${project.build.directory}/${service.final.name}</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>generate the servlet configuration</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>generate-servlet-config</goal>
						</goals>
						<configuration>
							<baseDirectory>${model.dir}</baseDirectory>
							<outputDirectory>${project.build.directory}/${service.final.name}/WEB-INF</outputDirectory>
							<basePackageName>${base.package.name}</basePackageName>
							<serviceId>${eip.service.ids}</serviceId>
							<serviceVersion>${project.version}</serviceVersion>
							<warName>${service.war.name}</warName>
							<revisionNumber>${buildNumber}</revisionNumber>
						</configuration>
					</execution>
					<execution>
						<id>generate spring integration router xmls</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>generate-router-xml</goal>
						</goals>
						<configuration>
							<baseDirectory>${router.definition.dir}</baseDirectory>
							<outputDirectory>${project.build.directory}/classes/router</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>generate spring configurations</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>generate-spring-config</goal>
						</goals>
						<configuration>
							<baseDirectory>${model.dir}</baseDirectory>
							<outputDirectory>${project.build.directory}/${service.final.name}/WEB-INF/classes</outputDirectory>
							<basePackageName>${base.package.name}</basePackageName>
							<serviceId>${eip.service.ids}</serviceId>
							<serviceVersion>${project.version}</serviceVersion>
							<warName>${service.war.name}</warName>
							<!-- Pesistence config imported in service provider via JavaConfig -->
							<applicationWithoutPersistenceConfig>true</applicationWithoutPersistenceConfig>
						</configuration>
					</execution>
					<execution>
						<id>generate security configurations</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>generate-security</goal>
						</goals>
						<configuration>
							<baseDirectory>${model.dir}</baseDirectory>
							<outputDirectory>${project.build.directory}/${service.final.name}/WEB-INF/classes</outputDirectory>
							<basePackageName>${base.package.name}</basePackageName>
							<serviceId>${eip.service.ids}</serviceId>
							<serviceVersion>${project.version}</serviceVersion>
							<channelPatternsAdminAuthorisation>${security.channel.pattern.admin}</channelPatternsAdminAuthorisation>
							<channelPatternsAnnonymousAuthorisation>${security.channel.pattern.anonymous}</channelPatternsAnnonymousAuthorisation>
							<channelPatternsCreate>${security.channel.pattern.create}</channelPatternsCreate>
							<channelPatternsRead>${security.channel.pattern.read}</channelPatternsRead>
							<channelPatternsUpdate>${security.channel.pattern.update}</channelPatternsUpdate>
							<channelPatternsDelete>${security.channel.pattern.delete}</channelPatternsDelete>
							<userProviderBeanName>ComSamplesIssLibraryUserProvider</userProviderBeanName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>buildnumber-first</id>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doUpdate>true</doUpdate>
				</configuration>
			</plugin>
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals><goal>add-source</goal></goals>
						<configuration>
							<sources>
								<source>${java.gen.dir}</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-help-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>effective-pom</goal>
						</goals>
						<configuration>
							<output>${project.build.directory}/${service.final.name}/META-INF/maven/${project.groupId}/${project.artifactId}/effective-pom.xml</output>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>platform-service-provider-techsupport-flow</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>platform-service-provider-library-internal</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>platform-core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.ws.security</groupId>
			<artifactId>wss4j</artifactId>
		</dependency>
		<dependency>
			<!-- Needed to generate multipe xsd WSDLs -->
			<groupId>org.apache.ws.xmlschema</groupId>
			<artifactId>xmlschema-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.santuario</groupId>
			<artifactId>xmlsec</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-security</artifactId>
		</dependency>
		<dependency>
			<groupId>wsdl4j</groupId>
			<artifactId>wsdl4j</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.wss</groupId>
			<artifactId>xws-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

	</dependencies>

	<!-- This is needed because of org.apache.santuario:xmlsec jar file dependency! -->
	<repositories>
		<repository>
			<id>spring-ext</id>
			<name>Spring repo-ext</name>
			<url>https://springframework.svn.sourceforge.net/svnroot/springframework/repos/repo-ext/</url>
		</repository>
	</repositories>
</project>