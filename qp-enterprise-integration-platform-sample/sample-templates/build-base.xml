<?xml version="1.0" encoding="UTF-8"?>
<project name="tcserver.templates" default="handle-readme">

	<property name="templates.dir" value="${project.build.directory}/templates" />
	<property name="template.environment.dir" value="${templates.dir}/${application.name}-${environment.name}-${application.version}"/>
	<property name="template.environment.user.dir" value="${templates.dir}/${application.name}-${environment.name}-user-${application.version}"/>
	<property name="artifacts.dir" value="${project.build.directory}/artifacts" />
	<property name="resources.dir" value="${basedir}/src/main/resources" />

	<tstamp><format property="current.time" pattern="yyyy-MM-dd'T'HH:mm:ss" /></tstamp>

	<target name="handle-readme">
		<replace file="${template.environment.dir}/README.txt"
			token="xxx-application.name-xxx"
			value="${application.name}" />
		<replace file="${template.environment.dir}/README.txt"
			token="xxx-environment.name-xxx"
			value="${environment.name}" />
		<replace file="${template.environment.dir}/README.txt"
			token="xxx-application.version-xxx"
			value="${application.version}" />
		<replace file="${template.environment.dir}/README.txt"
			token="xxx-domain.version-xxx"
			value="${domain.version}" />
		<replace file="${template.environment.dir}/README.txt"
			token="xxx-build.time-xxx"
			value="${current.time}" />
	</target>

	<target name="base-config" >
		<mkdir
			dir="${template.environment.dir}" />
		<copy
			failonerror="false"
			file="${resources.dir}/${environment.name}/configuration-prompts.properties"
			todir="${template.environment.dir}" />
		<copy
			failonerror="false"
			file="${resources.dir}/${environment.name}/README.txt"
			todir="${template.environment.dir}" />

		<mkdir
			dir="${template.environment.dir}/bin" />
		<copy
			failonerror="false"
			file="${resources.dir}/${environment.name}/setenv.properties"
			todir="${template.environment.dir}/bin" />

		<mkdir
			dir="${template.environment.dir}/conf" />
		<copy todir="${template.environment.dir}/conf" >
			<fileset dir="${resources.dir}/${environment.name}">
				<include name="**"/>
				<exclude name="*-user*"/>
				<exclude name="setenv.properties"/>
				<exclude name="README.txt"/>
				<exclude name="configuration-prompts.properties"/>
			</fileset>
		</copy>
		<mkdir
			dir="${template.environment.dir}/lib" />
		<copy todir="${template.environment.dir}/lib">
			<fileset dir="${artifacts.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>
	</target>

	<target name="base-additional-libs">
		<mkdir
			dir="${template.environment.dir}/lib" />
		<copy todir="${template.environment.dir}/lib">
			<fileset dir="${artifacts.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>
	</target>

	<target name="user-config" depends="base-config">
		<mkdir
			dir="${template.environment.user.dir}/conf" />
		<copy
			failonerror="false"
			file="${resources.dir}/${environment.name}/server-user-fragment.xml"
			tofile="${template.environment.user.dir}/conf/server-fragment.xml" />
		<copy
			failonerror="false"
			file="${resources.dir}/${environment.name}/jmxremote.password"
			todir="${template.environment.user.dir}/conf" />
		<copy
			failonerror="false"
			file="${resources.dir}/${environment.name}/${application.base.package.name}-user.properties"
			tofile="${template.environment.user.dir}/conf/${application.base.package.name}-user-${application.version}.properties" />
	</target>


	<target name="base-webapps-applications" >
		<mkdir
			dir="${template.environment.dir}/webapps" />
		<copy todir="${template.environment.dir}/webapps">
			<fileset dir="${artifacts.dir}">
				<include name="*.war"/>
			</fileset>
		</copy>
	</target>
	<target name="base-webapps-first" >
		<mkdir
			dir="${template.environment.dir}/webapps" />
				<copy todir="${template.environment.dir}/webapps">
			<fileset dir="${artifacts.dir}">
				<include name="*crm*.war"/>
				<include name="*directory*.war"/>
				<include name="*legal*.war"/>
			</fileset>
		</copy>
	</target>
	
	<!-- unless="tcserver.templates.dir" -->
	<target name="templates-zip" >
		<mkdir dir="${project.build.directory}/templates" />
		<zip basedir="${project.build.directory}/templates"
			destfile="${project.build.directory}/${application.name}-${application.version}.zip"
		/>
	</target>
</project>
